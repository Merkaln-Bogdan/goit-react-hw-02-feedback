{"version":3,"sources":["styles/Statistics.module.css","components/Section.js","components/Statistics.js","components/FeedbackOptions.js","components/Notification.js","App.js","index.js"],"names":["module","exports","Section","props","className","style","SectionTitle","title","children","Statistics","good","neutral","bad","total","positivePercentage","StatisticsBox","FeedbackOptions","options","onLeaveFeedback","map","element","StatisticsButton","type","name","key","uuidv4","onClick","Notification","prop","message","App","state","handleFeedback","setState","this","Math","round","countTotalFeedback","Object","keys","countPositiveFeedbackPercentage","Component","defaultProps","positiveFeed","ReactDOM","render","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,aAAe,iCAAiC,WAAa,+BAA+B,iBAAmB,qCAAqC,cAAgB,kCAAkC,WAAa,iC,oKCUtNC,EARC,SAACC,GACf,OACE,yBAAKC,UAAWC,IAAMC,cACpB,4BAAKH,EAAMI,OACVJ,EAAMK,WCSEC,EAbI,SAACN,GAAW,IACrBO,EAAkDP,EAAlDO,KAAMC,EAA4CR,EAA5CQ,QAASC,EAAmCT,EAAnCS,IAAKC,EAA8BV,EAA9BU,MAAOC,EAAuBX,EAAvBW,mBACnC,OACE,yBAAKV,UAAWC,IAAMU,eACpB,uCAAaL,GACb,0CAAgBC,GAChB,sCAAYC,GACZ,wCAAcC,GACd,oDAA0BC,EAA1B,Q,OCUSE,MAjBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,yBAAKd,UAAWC,IAAMI,YACnBQ,EAAQE,KAAI,SAACC,GAAD,OACX,4BACEhB,UAAWC,IAAMgB,iBACjBC,KAAK,SACLC,KAAMH,EAAQG,KACdC,IAAKC,eACLC,QAAS,kBAAMR,EAAgBE,KAE9BA,QCXIO,EADM,SAACC,GAAD,OAAU,4BAAKA,EAAKC,UCGnCC,E,4MAQJC,MAAQ,CACNrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPoB,eAAiB,SAACJ,GAChB,EAAKK,UAAS,SAACF,GAAD,sBAAeH,EAAOG,EAAMH,GAAQ,O,mEAG9B,IAAD,EACYM,KAAKH,MAA5BrB,EADW,EACXA,KAAMC,EADK,EACLA,QACd,OAFmB,EACIC,IACVF,EAAOC,I,wDAGpB,OAAOwB,KAAKC,MAAyB,IAAlBF,KAAKH,MAAMrB,KAAcwB,KAAKG,wB,+BAGzC,IAAD,EACwBH,KAAKH,MAA5BrB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,kBAAC,EAAD,CAASL,MAAO,8BACd,kBAAC,EAAD,CACEU,QAASqB,OAAOC,KAAKL,KAAKH,OAC1Bb,gBAAiBgB,KAAKF,iBAEvBtB,EAAO,GAAKC,EAAU,GAAKC,EAAM,EAChC,kBAAC,EAAD,CAASL,MAAM,cACb,kBAAC,EAAD,CACEG,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,KAAKG,qBACZvB,mBAAoBoB,KAAKM,qCAI7B,kBAAC,EAAD,CAAcX,QAAS,+B,GA9CfY,aAAZX,EACGY,aAAe,CACpBhC,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACP8B,aAAc,GA8CHb,QCtDfc,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1026d790.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SectionTitle\":\"Statistics_SectionTitle__2giyo\",\"Statistics\":\"Statistics_Statistics__1IvJ0\",\"StatisticsButton\":\"Statistics_StatisticsButton__-qXeA\",\"StatisticsBox\":\"Statistics_StatisticsBox__12YSw\",\"percentage\":\"Statistics_percentage__2yntn\"};","import React from \"react\";\r\nimport style from \"../styles/Statistics.module.css\";\r\n\r\nconst Section = (props) => {\r\n  return (\r\n    <div className={style.SectionTitle}>\r\n      <h2>{props.title}</h2>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\nexport default Section;\r\n","import React from \"react\";\r\nimport style from \"../styles/Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nconst Statistics = (props) => {\r\n  const { good, neutral, bad, total, positivePercentage } = props;\r\n  return (\r\n    <div className={style.StatisticsBox}>\r\n      <span>Good: {good}</span>\r\n      <span>Neutral: {neutral}</span>\r\n      <span>Bad: {bad}</span>\r\n      <span>Total: {total}</span>\r\n      <span>Positive feedback: {positivePercentage} %</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import React from \"react\";\r\nimport style from \"../styles/Statistics.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className={style.Statistics}>\r\n      {options.map((element) => (\r\n        <button\r\n          className={style.StatisticsButton}\r\n          type=\"button\"\r\n          name={element.name}\r\n          key={uuidv4()}\r\n          onClick={() => onLeaveFeedback(element)}\r\n        >\r\n          {element}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = (prop) => <h2>{prop.message}</h2>;\r\nexport default Notification;\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section\";\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Notification from \"./components/Notification\";\n\nclass App extends Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n    positiveFeed: 0,\n  };\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = (prop) => {\n    this.setState((state) => ({ [prop]: state[prop] + 1 }));\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    return bad + good + neutral;\n  }\n  countPositiveFeedbackPercentage() {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Section title={\"Please leave your feedback\"}>\n        <FeedbackOptions\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.handleFeedback}\n        />\n        {good > 0 || neutral > 0 || bad > 0 ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <Notification message={\"Feedback is not given\"} />\n        )}\n      </Section>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}